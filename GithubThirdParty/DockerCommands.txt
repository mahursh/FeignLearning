docker login


docker login -u mahurshams94@gmail.com


docker build -t github-third-party .
docker run -p 80:80 github-third-party


docker images


run -d --name github-third-party-app -p 80:80 github-third-party


docker ps


docker logs github-third-party-app


docker stop github-third-party-app


docker rm github-third-party-app


docker ps -a


run -d --name github-third-party-app -p 80:80 github-third-party


docker ps (shows active containers)
docker ps -a   (shows all containers)


docker images

docker-compose build


docker-compose up

docker-compose down

docker rename my_container my_new_container  (to rename my container)
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


# What dose ONBUILD do?

RUN mvn dependency:go-offline -B

RUN mvn dependency:resolve


RUN mvn dependency:go-offline

RUN mvn -f ./src

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
docker run -d --name github-third-party-app -p 8080:8080 github-third-party
Breakdown of the Command:
-d: Runs the container in detached mode (in the background).
--name github-third-party-app: Assigns a name to your running container.
-p 8080:8080: Maps port 8080 on your local machine to port 8080 on the container (adjust these as necessary based on your app's port).
github-third-party: Specifies the name of the image to run.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#mvn install:install-file -Dfile=C:\Users\m.shams\AppData\Local\Temp\2\FeignLearning\GithubThirdParty\src\main\resources\META-INF\lib\loggingLib.jar -DgroupId=com.ada -DartifactId=loggingLib -Dversion=0.0.1-SNAPSHOT -Dpackaging=jar
